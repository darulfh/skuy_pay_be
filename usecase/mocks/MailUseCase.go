// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	model "BE-Golang/model"

	mock "github.com/stretchr/testify/mock"
)

// MailUseCase is an autogenerated mock type for the MailUseCase type
type MailUseCase struct {
	mock.Mock
}

// SendingMail provides a mock function with given fields: payload
func (_m *MailUseCase) SendingMail(payload model.PayloadMail) {
	_m.Called(payload)
}

// NewMailUseCase creates a new instance of MailUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMailUseCase(t interface {
	mock.TestingT
	Cleanup(func())
}) *MailUseCase {
	mock := &MailUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
